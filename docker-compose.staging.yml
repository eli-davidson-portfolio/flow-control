services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    env_file: .env.staging
    environment:
      APP_PORT: "8080"
      CGO_ENABLED: "1"
      COMPOSE_DOCKER_CLI_BUILD: "1"
      CONFIG_FILE: /app/config.json
      DB_PATH: /app/data/flows.db
      DOCKER_BUILDKIT: "1"
      ENVIRONMENT: staging
      GO_ENV: staging
      LOG_FILE: /app/logs/flow-control.log
      LOG_FORMAT: json
      LOG_LEVEL: debug
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: "8080"
      WEBHOOK_PORT: "9001"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config.json:/app/config.json
    network_mode: host
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  webhook:
    image: almir/webhook
    volumes:
      - ./config/hooks.json:/etc/webhook/hooks.json
      - ./scripts:/app/scripts
    environment:
      - PORT=${WEBHOOK_PORT:-9001}
    command: -hooks /etc/webhook/hooks.json -verbose -port ${WEBHOOK_PORT:-9001}
    network_mode: host
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9001/hooks"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"